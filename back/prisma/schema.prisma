// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts     Post[]
  comments  Comment[]
  reactions Reaction[]
}

model Post {
  id        Int      @id @default(autoincrement())
  content   String
  reactions Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId   Int
  author   User       @relation(fields: [userId], references: [id])
  comments Comment[]
  Reaction Reaction[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())

  postId Int
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  userId Int
  author User @relation(fields: [userId], references: [id])
}

model Reaction {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  postId Int
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  userId Int
  user   User @relation(fields: [userId], references: [id])

  @@unique([postId, userId])
}
